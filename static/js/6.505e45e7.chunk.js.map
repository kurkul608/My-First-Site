{"version":3,"sources":["components/common/preloader/FormsControls/FormsControls.js","components/common/preloader/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","input","meta","props","hasError","touched","error","className","classes","formControl","children","Textarea","restProps","Input","CreateField","placeholder","name","component","validate","type","text","module","exports","requiredField","value","maxLenghtCreator","maxlength","length","LoginReduxStore","reduxForm","form","handleSubmit","captchaUrl","s","parent","onSubmit","inner","block","formSummaryError","src","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"sQAIMA,EAAc,SAAC,GAA2B,EAA1BC,MAA2B,IAApBC,EAAmB,EAAnBA,KAASC,EAAU,gCACtCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWH,GAAYI,IAAQC,YAAc,IAAMD,IAAQF,OAC3DH,EAAMO,SACdN,GAAY,0BAAMG,UAAWC,IAAQC,YAAc,IAAMD,IAAQF,OAAQJ,EAAKI,SAItEK,EAAW,SAACR,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADiB,YACKC,EADL,mBAE/B,OAAM,kBAACH,EAAgBG,EAAO,8CAAcF,EAAWW,MAG9CC,EAAQ,SAACV,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADc,YACQC,EADR,mBAE5B,OAAM,kBAACH,EAAgBG,EAAO,2CAAWF,EAAWW,MAE3CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,EAAUC,EAAMC,GAC1E,OAAO,kCAAO,kBAAC,IAAD,CAAOL,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWC,SAAUA,EAAUC,KAAMA,IAApG,IAA8GC,K,oBCtBrHC,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCC3H,oEAAO,IAAMC,EAAgB,SAACC,GAC1B,IAAIA,EACJ,MAAO,qBAIEC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAE3C,GAAIA,EAAMG,OAAQD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCTjCL,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,OAAS,sBAAsB,MAAQ,qBAAqB,MAAQ,uB,iCCDzI,kHAkCMM,EAAkBC,YAAU,CAAEC,KAAM,SAAlBD,EArBN,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,aAAczB,EAAwB,EAAxBA,MAAO0B,EAAiB,EAAjBA,WACxC,OACE,0BAAMzB,UAAW0B,IAAEC,OAAQC,SAAUJ,GACnC,yBAAKxB,UAAW0B,IAAEG,OAChB,yBAAK7B,UAAW0B,IAAEI,OAClB,qCACCvB,YAAY,QAAS,QAASD,IAAO,CAACU,KAAgB,IACtDT,YAAY,WAAW,WAAWD,IAAM,CAACU,KAAe,YACxDT,YAAY,GAAI,aAAc,QAAS,GAAI,WAAY,eACzDR,GAAS,yBAAKC,UAAWC,IAAQ8B,kBAAmBhC,GACrD,6BACG0B,GAAe,yBAAKO,IAAKP,IACzBA,GAAelB,YAAY,qBAAsB,UAAWD,IAAO,CAACU,KAAgB,GAAI,IACzF,gDA2BOiB,uBALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnBV,WAAYS,EAAME,KAAKX,cAGe,CAAEY,WAA3BJ,EAjBD,SAACrC,GAIb,OAAqB,IAAjBA,EAAMuC,OAAwB,kBAAC,IAAD,CAAUG,GAAG,aAE7C,6BACE,kBAACjB,EAAD,CAAiBO,SANJ,SAACW,GAChB3C,EAAMyC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAKtClB,WAAY7B,EAAM6B","file":"static/js/6.505e45e7.chunk.js","sourcesContent":["import React from 'react'\nimport classes from './FormsControls.module.css'\nimport {Field} from 'redux-form'\n\nconst FormControl = ({input, meta, ...props}) =>{\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={hasError && classes.formControl + ' ' + classes.error}>\n            {props.children}\n    {hasError && <span className={classes.formControl + ' ' + classes.error}>{meta.error}</span>}\n        </div>)\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\nexport const CreateField = (placeholder, name, component, validate, type, text) => {\nreturn <span> <Field placeholder={placeholder} name={name} component={component} validate={validate} type={type} /> {text}</span> \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__13IAy\",\"error\":\"FormsControls_error__KVCLW\",\"formSummaryError\":\"FormsControls_formSummaryError__3RxXw\"};","\n\nexport const requiredField = (value) => {\n    if (value) return undefined\n    return 'Filed is required'\n    \n}\n\nexport const maxLenghtCreator =(maxlength) => (value)=> {\n    \n    if (value.length> maxlength) return `Max lenght is ${maxlength} symbols`\n    return undefined\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3cy0x\",\"parent\":\"Login_parent__2-j0C\",\"inner\":\"Login_inner__19gUZ\",\"block\":\"Login_block__3BMBA\"};","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  Input,\n  CreateField,\n} from \"../common/preloader/FormsControls/FormsControls\";\nimport { requiredField } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../Redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport classes from \"../common/preloader/FormsControls/FormsControls.module.css\";\nimport s from \"./Login.module.css\"\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n  return (\n    <form className={s.parent} onSubmit={handleSubmit}>\n      <div className={s.inner}>\n        <div className={s.block}>\n        <h1>LOGIN</h1>\n        {CreateField(\"email\", \"email\", Input, [requiredField], \"\")}\n        {CreateField(\"password\",\"password\",Input,[requiredField],\"password\")}\n        {CreateField(\"\", \"rememberMe\", \"input\", \"\", \"checkbox\", 'remember me')}\n      {error && <div className={classes.formSummaryError}>{error}</div>}\n      <div>\n        {captchaUrl &&  <img src={captchaUrl}/>}\n        {captchaUrl &&  CreateField(\"Symbols from image\", \"captcha\", Input, [requiredField], \"\", '')}\n        <button>Login</button>\n      </div>\n      </div>\n        </div>\n    </form>\n  );\n};\n\nconst LoginReduxStore = reduxForm({ form: \"login\" })(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n  if (props.isAuth === true) return <Redirect to=\"/profile\" />;\n  return (\n    <div>\n      <LoginReduxStore onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"],"sourceRoot":""}