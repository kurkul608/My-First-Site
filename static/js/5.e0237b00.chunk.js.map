{"version":3,"sources":["components/common/preloader/FormsControls/FormsControls.module.css","components/common/preloader/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/auth-redirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogName/DialogName.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","props","hasError","touched","error","className","classes","formControl","children","Textarea","restProps","Input","CreateField","placeholder","name","component","validate","type","text","requiredField","value","maxLenghtCreator","maxlength","length","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogName","id","activeClassName","active","Message","message","maxLength100","MessageReduxStore","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogElement","dialogData","map","d","key","messagesElement","messagesData","m","dialogsItems","Messages","formData","sendMessage","newMessage","DialogsContainer","newMessageBody","sendMessageActionCreator","updateNewMessage","updateNewMessageBodyActionCreator","compose","dialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAA2B,EAA1BC,MAA2B,IAApBC,EAAmB,EAAnBA,KAASC,EAAU,gCACtCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWH,GAAYI,IAAQC,YAAc,IAAMD,IAAQF,OAC3DH,EAAMO,SACdN,GAAY,0BAAMG,UAAWC,IAAQC,YAAc,IAAMD,IAAQF,OAAQJ,EAAKI,SAItEK,EAAW,SAACR,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADiB,YACKC,EADL,mBAE/B,OAAM,kBAACH,EAAgBG,EAAO,8CAAcF,EAAWW,MAG9CC,EAAQ,SAACV,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADc,YACQC,EADR,mBAE5B,OAAM,kBAACH,EAAgBG,EAAO,2CAAWF,EAAWW,MAE3CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,EAAUC,EAAMC,GAC1E,OAAO,kCAAO,kBAAC,IAAD,CAAOL,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWC,SAAUA,EAAUC,KAAMA,IAApG,IAA8GC,K,iCCrBrH,oEAAO,IAAMC,EAAgB,SAACC,GAC1B,IAAIA,EACJ,MAAO,qBAIEC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAE3C,GAAIA,EAAMG,OAAQD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+ICP7BE,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SAEtDE,EAAkB,SAACC,GAAe,IACnCC,EADkC,iLAGhC,OAAKC,KAAK9B,MAAMyB,OACT,kBAACG,EAAcE,KAAK9B,OADI,kBAAC,IAAD,CAAU+B,GAAG,eAHZ,GACRC,IAAMJ,WASlC,OADqCK,YAAQV,EAARU,CAAoCJ,K,oBCbjFlC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,8KCSpKsC,MANf,SAAoBlC,GAChB,OACA,6BAAK,kBAAC,IAAD,CAAS+B,GAAE,oBAAe/B,EAAMmC,IAAMC,gBAAiB/B,IAAQgC,QAASrC,EAAMa,QCIxEyB,MAPf,SAAiBtC,GACb,OACI,6BACKA,EAAMuC,U,2BCQbC,EAAepB,YAAiB,KAwBtC,IAqBMqB,EAAoBC,YAAU,CAAEC,KAAM,wBAAlBD,EArBH,SAAC1C,GACtB,OACE,0BAAM4C,SAAU5C,EAAM6C,cACpB,6BACE,6BACGlC,YACC,mIACA,aACAH,IACA,CAACU,IAAesB,GAChB,KAGJ,6BACE,sDAUKM,EA9Cf,SAAiB9C,GACf,IAAI+C,EAAgB/C,EAAMgD,WAAWC,KAAI,SAACC,GAAD,OACvC,kBAAC,EAAD,CAAYrC,KAAMqC,EAAErC,KAAMsC,IAAKD,EAAEf,GAAIA,GAAIe,EAAEf,QAEzCiB,EAAkBpD,EAAMqD,aAAaJ,KAAI,SAACK,GAAD,OAC3C,kBAAC,EAAD,CAASf,QAASe,EAAEf,QAASY,IAAKG,EAAEnB,QAOtC,OACE,yBAAK/B,UAAWC,IAAQyC,SACtB,yBAAK1C,UAAWC,IAAQkD,cAAeR,GACvC,yBAAK3C,UAAWC,IAAQmD,UACrBJ,EACD,kBAACX,EAAD,CAAmBG,SATR,SAACa,GAChBzD,EAAM0D,YAAYD,EAASE,kB,iCChBzBC,E,iLAGG,OAAK9B,KAAK9B,MAAMyB,OACV,kBAAC,EAAD,CACPuB,WAAYlB,KAAK9B,MAAMgD,WACvBK,aAAcvB,KAAK9B,MAAMqD,aACzBQ,eAAgB/B,KAAK9B,MAAM6D,eAC3BH,YAAa5B,KAAK9B,MAAM8D,yBACxBC,iBAAkBjC,KAAK9B,MAAMgE,oCANG,kBAAC,IAAD,CAAUjC,GAAG,e,GAHtBC,IAAMJ,WAwBrBqC,sBAAQhC,aATH,SAACT,GAClB,MAAO,CACHwB,WAAYxB,EAAM0C,YAAYlB,WAC9BK,aAAc7B,EAAM0C,YAAYb,aAChCQ,eAAgBrC,EAAM0C,YAAYL,kBAKO,CAAEC,+BAA4BnC,IAA/DsC,CAAiFL","file":"static/js/5.e0237b00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__13IAy\",\"error\":\"FormsControls_error__KVCLW\",\"formSummaryError\":\"FormsControls_formSummaryError__3RxXw\"};","import React from 'react'\nimport classes from './FormsControls.module.css'\nimport {Field} from 'redux-form'\n\nconst FormControl = ({input, meta, ...props}) =>{\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={hasError && classes.formControl + ' ' + classes.error}>\n            {props.children}\n    {hasError && <span className={classes.formControl + ' ' + classes.error}>{meta.error}</span>}\n        </div>)\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\nexport const CreateField = (placeholder, name, component, validate, type, text) => {\nreturn <span> <Field placeholder={placeholder} name={name} component={component} validate={validate} type={type} /> {text}</span> \n}","\n\nexport const requiredField = (value) => {\n    if (value) return undefined\n    return 'Filed is required'\n    \n}\n\nexport const maxLenghtCreator =(maxlength) => (value)=> {\n    \n    if (value.length> maxlength) return `Max lenght is ${maxlength} symbols`\n    return undefined\n}\n","import React from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth})\n\nexport let WithAuthRedirect =(Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />}\n        \n        }\n\n        \n        let ConnectedAuthRedirextComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n        return ConnectedAuthRedirextComponent\n    }\n    \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1HvdP\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"Messages\":\"Dialogs_Messages__2OSA1\",\"message\":\"Dialogs_message__1xIDh\",\"active\":\"Dialogs_active__2sQhs\"};","import React from 'react';\nimport classes from './DialogName.module.css'\nimport { NavLink } from 'react-router-dom';\n\nfunction DialogName(props){\n    return(\n    <div><NavLink to={`/messages/${props.id}`} activeClassName={classes.active}>{props.name}</NavLink></div>\n    \n    );\n}\nexport default DialogName;","import React from 'react';\n\n\nfunction Message(props){\n    return(\n        <div>\n            {props.message}\n        </div>\n    );\n}\nexport default Message;","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogName from \"./DialogName/DialogName\";\nimport Message from \"./Message/Message\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  Textarea,\n  CreateField,\n} from \"../common/preloader/FormsControls/FormsControls\";\nimport {\n  requiredField,\n  maxLenghtCreator,\n} from \"../../utils/validators/validators\";\n\nconst maxLength100 = maxLenghtCreator(100);\n\nfunction Dialogs(props) {\n  let dialogElement = props.dialogData.map((d) => (\n    <DialogName name={d.name} key={d.id} id={d.id} />\n  ));\n  let messagesElement = props.messagesData.map((m) => (\n    <Message message={m.message} key={m.id} />\n  ));\n\n  const onSubmit = (formData) => {\n    props.sendMessage(formData.newMessage);\n  };\n\n  return (\n    <div className={classes.Dialogs}>\n      <div className={classes.dialogsItems}>{dialogElement}</div>\n      <div className={classes.Messages}>\n        {messagesElement}\n        <MessageReduxStore onSubmit={onSubmit} />\n      </div>\n    </div>\n  );\n}\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <div>\n          {CreateField(\n            \"Введите новое сообщение\",\n            \"newMessage\",\n            Textarea,\n            [requiredField, maxLength100],\n            \"\"\n          )}\n        </div>\n        <div>\n          <button>Send Message</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst MessageReduxStore = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\nexport default Dialogs;\n","import React from 'react';\nimport { sendMessageActionCreator } from '../../Redux/dialogs-reducer';\nimport Dialogs from './Dialogs'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { WithAuthRedirect } from '../../hoc/auth-redirect';\nimport { compose } from 'redux';\n\n\nclass DialogsContainer extends React.Component {\n\n    render() {\n         if (!this.props.isAuth) return <Redirect to='/login' />\n        return <Dialogs \n        dialogData={this.props.dialogData}\n        messagesData={this.props.messagesData}\n        newMessageBody={this.props.newMessageBody}\n        sendMessage={this.props.sendMessageActionCreator}\n        updateNewMessage={this.props.updateNewMessageBodyActionCreator}/>\n    }\n}\n\n\n\nlet mapStateToProps =(state) => {\n    return {\n        dialogData: state.dialogsPage.dialogData,\n        messagesData: state.dialogsPage.messagesData,\n        newMessageBody: state.dialogsPage.newMessageBody,\n    }\n\n}\n\nexport default  compose(connect(mapStateToProps, { sendMessageActionCreator}), WithAuthRedirect)(DialogsContainer)"],"sourceRoot":""}