{"version":3,"sources":["components/common/preloader/FormsControls/FormsControls.js","components/common/preloader/FormsControls/FormsControls.module.css","utils/validators/validators.js","hoc/auth-redirect.js","assets/images/defaultAva.png","components/Profile/UserInfo/Data/Data.module.css","components/Profile/UserInfo/UserInfo.module.css","components/Profile/UserInfo/Avatar/Avatar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/images/logo.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/UserInfo/Avatar/Avatar.jsx","components/Profile/UserInfo/Data/Data.jsx","components/Profile/UserInfo/Data/DataForm.jsx","components/Profile/UserInfo/ProfileStatusWithHooks.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","hasError","touched","error","className","classes","formControl","children","Textarea","restProps","Input","CreateField","placeholder","name","component","validate","type","text","module","exports","requiredField","value","maxLenghtCreator","maxlength","length","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","Avatar","avatar","src","Data","profile","isOwner","goToEditMode","data","fullName","aboutMe","keys","contacts","map","key","contactTitle","contactValue","lookingForAJob","lookingForAJobDescription","onClick","Contact","maxLength15","maxLength30","DataForm","reduxForm","form","handleSubmit","onSubmit","contact","formSummaryError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","putStatus","UserInfo","savePhoto","saveProfile","deActivateEditMode","userinfo","photos","large","noAva","initialValues","formData","then","target","files","onMainPhotoSelected","Post","item","logo","message","likesCount","disslikesCount","maxLenght10","MyPosts","memo","console","log","postElements","postData","p","id","mypost","posts","AddPostReduxStore","addPost","newPost","item_new_post","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Content","ProfileContainer","userid","match","params","autorizedUserid","setUserProfileThunkCreator","getStatus","refreshProfile","prevProps","prevState","snapsot","isFetching","compose","userID","withRouter"],"mappings":"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","file":"static/js/4.cf7e2989.chunk.js","sourcesContent":["import React from 'react'\nimport classes from './FormsControls.module.css'\nimport {Field} from 'redux-form'\n\nconst FormControl = ({input, meta, ...props}) =>{\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={hasError && classes.formControl + ' ' + classes.error}>\n            {props.children}\n    {hasError && <span className={classes.formControl + ' ' + classes.error}>{meta.error}</span>}\n        </div>)\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props\n    return<FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\nexport const CreateField = (placeholder, name, component, validate, type, text) => {\nreturn <span> <Field placeholder={placeholder} name={name} component={component} validate={validate} type={type} /> {text}</span> \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__13IAy\",\"error\":\"FormsControls_error__KVCLW\",\"formSummaryError\":\"FormsControls_formSummaryError__3RxXw\"};","\n\nexport const requiredField = (value) => {\n    if (value) return undefined\n    return 'Filed is required'\n    \n}\n\nexport const maxLenghtCreator =(maxlength) => (value)=> {\n    \n    if (value.length> maxlength) return `Max lenght is ${maxlength} symbols`\n    return undefined\n}\n","import React from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth})\n\nexport let WithAuthRedirect =(Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />}\n        \n        }\n\n        \n        let ConnectedAuthRedirextComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n        return ConnectedAuthRedirextComponent\n    }\n    \n","module.exports = __webpack_public_path__ + \"static/media/defaultAva.98ebb800.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Data_formSummaryError__3ZhFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userinfo\":\"UserInfo_userinfo__3eDdA\",\"data\":\"UserInfo_data__2GpE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__VQ-aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"item\":\"MyPosts_item__R6Jlo\",\"mypost\":\"MyPosts_mypost__3UHfk\",\"createnewpost\":\"MyPosts_createnewpost__2vxrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.9b2a91dd.svg\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\nimport classes from './Avatar.module.css'\n\nfunction Avatar(props) {\n    return(\n        <div className={classes.avatar}>\n        <img src={props.avatar} />\n        </div>\n    );\n}\nexport default Avatar;","import React from \"react\";\nimport classes from \"./Data.module.css\";\n\nexport function Data({ profile, isOwner, goToEditMode }) {\n    \n  return (\n    <div className={classes.data}>\n      <b>Name: </b>\n      {profile.fullName} <br />\n      <b>About me: </b>{profile.aboutMe}<br />\n      <b>Contacts: </b>\n      {Object.keys(profile.contacts).map((key) => (\n         <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n      ))}\n      <div>\n        <b>Looking for a job: </b>\n        {profile.lookingForAJob ? <span>Yes</span> : <span>No</span>} <br />\n        {profile.lookingForAJob && <b>My professional skills: </b> + (profile.lookingForAJobDescription)}\n          \n      </div>\n      {isOwner && <button onClick={goToEditMode}>Edit</button>}\n    </div>\n  );\n}\n\nexport const Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div>\n      <b>{contactTitle} - </b> {contactValue}{\" \"}\n    </div>\n  );\n};\n\n","import React from 'react'\nimport { Contact } from './Data'\nimport { reduxForm } from \"redux-form\";\nimport {\n    Textarea,\n    CreateField,\n    Input,\n  } from \"../../../common/preloader/FormsControls/FormsControls\";\n  import {\n    requiredField,\n    maxLenghtCreator,\n  } from \"../../../../utils/validators/validators\";\nimport classes from './Data.module.css';\n\n  const maxLength15 = maxLenghtCreator(15);\n  const maxLength30 = maxLenghtCreator(30);\n\n const DataReuxForm = ({handleSubmit,  profile, error}) => {\n     debugger\n    return (\n    <form onSubmit={handleSubmit}>\n        \n        <b>Name: </b> {CreateField(\n            \"FullName\",\n            \"fullName\",\n            Input,\n            [requiredField, maxLength15],\n            \"\"\n          )}\n          <b>About me: </b> <br />{CreateField(\n            \"\",\n            \"aboutMe\",\n            Input ,\n            [requiredField, maxLength30],\n            \"\"\n          )}\n        <b>Contacts: </b>\n        {Object.keys(profile.contacts).map((key) => (\n            <div className={classes.contact}>\n                <b>{key}:</b>\n                {CreateField(\n            key,\n            \"contacts.\"+ key,\n            Input ,\n            [requiredField],\n            \"\"\n          )}\n            </div>\n            ))}\n            <b>Looking for a job: </b>{CreateField(\n            \"\",\n            \"lookingForAJob\",\n            Input ,\n            [],\n            \"checkbox\"\n          )}\n          <b>My professional skills: </b>\n          {CreateField(\n            \"My professional skills:\",\n            \"lookingForAJobDescription\",\n            Textarea,\n            [requiredField, maxLength30],\n            \"checkbox\"\n          )}\n          {error && <div className={classes.formSummaryError}>{error}</div>}\n          <button>Save</button>\n    </form>\n    );\n  }\n  export const DataForm = reduxForm({ form: \"edit-profile\" })(DataReuxForm)","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction ProfileStatusWithHooks(props) {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status]);\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deActivateEditMode = () => {\n    setEditMode(false);\n    props.putStatus(status);\n  };\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <b>Status: </b>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"NO STATUS\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <b>Status: </b>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deActivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProfileStatusWithHooks;\n","import React, { useState } from \"react\";\nimport classes from \"./UserInfo.module.css\";\nimport Avatar from \"./Avatar/Avatar\";\nimport { Data } from \"./Data/Data\";\nimport { DataForm } from \"./Data/DataForm\";\nimport Preloader from \"../../common/preloader/preloader\";\nimport noAva from \"../../../assets/images/defaultAva.png\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nfunction UserInfo({ savePhoto, profile, putStatus, status, isOwner, saveProfile }) {\n  let [editMode, setEditMode] = useState(false);\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n  const deActivateEditMode = () => {\n    setEditMode(false);\n  };\n  if (!profile) {\n    return <Preloader />;\n  } else {\n    const onMainPhotoSelected = (e) => {\n      savePhoto(e.target.files[0]);\n    };\n\n    const onSubmit =   (formData) => {\n        saveProfile(formData).then(()=> {deActivateEditMode();})\n        \n    };\n    return (\n      <div>\n        <div className={classes.userinfo}>\n          <Avatar avatar={profile.photos.large || noAva} />\n\n          <div>\n            {editMode ? (\n              <DataForm\n              initialValues={profile}\n                onSubmit={onSubmit}\n                profile={profile}\n                goToEditMode={deActivateEditMode}\n              />\n            ) : (\n              <Data\n                profile={profile}\n                isOwner={isOwner}\n                goToEditMode={activateEditMode}\n              />\n            )}\n          </div>\n          <div>\n            {isOwner && (\n              <input type=\"file\" onChange={(e) => onMainPhotoSelected(e)} />\n            )}\n          </div>\n          <br />\n          <div>\n            <ProfileStatusWithHooks putStatus={putStatus} status={status} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  // <Avatar avatar={u.photos.large} key={u.id} />\n}\n\nexport default UserInfo;\n","import React from 'react';\nimport classes from './Post.module.css'\nimport logo from './images/logo.svg';\n\n\nfunction Post(props){\n    return(\n        <div className={classes.item}>\n            <img src={logo} />\n            {props.message}\n            <div>\n            <span>{props.likesCount} Like </span>\n            <span>{props.disslikesCount} DissLike</span>\n            </div> \n          </div>\n    );\n}\nexport default Post;\n","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { reduxForm } from \"redux-form\";\nimport {\n  requiredField,\n  maxLenghtCreator,\n} from \"../../../utils/validators/validators\";\nimport {\n  Textarea,\n  CreateField,\n} from \"../../common/preloader/FormsControls/FormsControls\";\n\nconst maxLenght10 = maxLenghtCreator(10);\n\nconst MyPosts = React.memo((props) => {\n  console.log(\"render\");\n\n  const onSubmit = (formData) => {\n    props.addPost(formData.newPost);\n  };\n  let postElements = props.postData.map((p) => (\n    <Post\n      key={p.id}\n      message={p.message}\n      likesCount={p.likesCount}\n      disslikesCount={p.disslikesCount}\n    />\n  ));\n\n  return (\n    <div className={classes.mypost}>\n      <div className={classes.posts}>\n        <h3>My posts</h3>\n        <AddPostReduxStore onSubmit={onSubmit} />\n      </div>\n      <div className={classes.item}>{postElements}</div>\n    </div>\n  );\n});\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.item_new_post}>\n        {CreateField(\n          \"Введите новое сообщение\",\n          \"newPost\",\n          Textarea,\n          [requiredField, maxLenght10],\n          \"\"\n        )}\n        <div>\n          <button>Create new post</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxStore = reduxForm({ form: \"posAddNewPost\" })(AddPostForm);\nexport default MyPosts;\n","import React from 'react';\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux';\n\n\n\n\n\nlet mapStateToProps =(state) => {\n  return {\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  } \n\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n      addPost: (text) => {\n        dispatch(addPostActionCreator(text));\n      }\n  }\n\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css'\nimport UserInfo from './UserInfo/UserInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\n\nfunction Content(props) {\n \n    return(\n        <div className={classes.profile}>\n          <UserInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} putStatus={props.putStatus} profile={props.profile} status={props.status}/>\n          <MyPostsContainer  />\n        </div>\n    );\n}\nexport default Content;","import React from 'react';\nimport Content from './Profile';\nimport { connect } from 'react-redux';\nimport {saveProfile,  setUserProfileThunkCreator, getStatus, putStatus, savePhoto } from '../../Redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { WithAuthRedirect } from '../../hoc/auth-redirect';\nimport { compose } from 'redux';\nimport Preloader from '../common/preloader/preloader';\n\n \nclass ProfileContainer extends React.Component {\n\n  refreshProfile() {\n    let userid = this.props.match.params.userid\n    if (!userid) {userid = this.props.autorizedUserid}\n    this.props.setUserProfileThunkCreator(userid);\n    this.props.getStatus(userid); \n  }\n  componentDidMount() {\n    this.refreshProfile()\n  }\n  componentDidUpdate(prevProps, prevState, snapsot){\n    if (this.props.match.params.userid !== prevProps.match.params.userid){\n      this.refreshProfile()\n    }\n     \n  }\n\n  render() {\n    // if (!this.props.isAuth) return <Redirect to='/login' />\n    return  (<>\n   { this.props.isFetching ? <Preloader /> : null}\n    <Content {...this.props} saveProfile={this.props.saveProfile} savePhoto={this.props.savePhoto}  isOwner={!this.props.match.params.userid} profile={this.props.profile} status={this.props.status} putStatus={this.props.putStatus} />\n    </>)\n  }\n}\n\n\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile, \n  status: state.profilePage.status,\n  autorizedUserid: state.auth.userID,\n  isFetching: state.profilePage.isFetching})\n\n\nexport default compose(connect (mapStateToProps, {saveProfile, setUserProfileThunkCreator, getStatus, putStatus, savePhoto}),withRouter, WithAuthRedirect)(ProfileContainer);"],"sourceRoot":""}